# Development Workflow

## Available Scripts

From [package.json](mdc:package.json):

- `npm run build` - Compile TypeScript to `dist/`
- `npm run dev` - Watch mode development with `tsx`
- `npm start` - Run compiled server from `dist/`
- `npm run typecheck` - Type checking without compilation
- `npm run lint` - ESLint validation
- `npm run format` - Prettier code formatting

## Environment Setup

Required environment variables:

```bash
MOTION_API_KEY=your_api_key_here
MOTION_API_BASE_URL=https://api.usemotion.com/v1  # optional
MOTION_RATE_LIMIT_PER_MINUTE=12                   # optional
```

## Development Server

Run in development mode:

```bash
npm run dev
```

This uses `tsx watch` to automatically restart on file changes.

## Testing with MCP

To test the MCP server:

1. **Build the project**: `npm run build`
2. **Run the server**: `npm start`
3. **Test with MCP client** or integration

## Adding New Tools

1. **Create tool file** in `src/tools/` (e.g., `newFeature.ts`)
2. **Export register function**: `export function registerNewFeatureTools(client: MotionApiClient): Tool[]`
3. **Register in main server**: Add to imports and tools array in [src/index.ts](mdc:src/index.ts)
4. **Follow existing patterns** from [src/tools/task.ts](mdc:src/tools/task.ts)

## Code Quality

- **Type safety**: Use TypeScript strictly, no `any` types
- **Validation**: Zod schemas for all inputs
- **Error handling**: Proper error messages and types
- **Formatting**: Prettier with [.prettierrc](mdc:.prettierrc) config
- **Linting**: ESLint with [.eslintrc.json](mdc:.eslintrc.json) config

## Debugging

- Use `console.error()` for debugging (goes to stderr)
- Check Motion API documentation for parameter requirements
- Test rate limiting with multiple rapid requests
- Verify environment variables are loaded correctly

## API Documentation

Reference the Motion API documentation and [docs/MOTION_API_REFERENCE.md](mdc:docs/MOTION_API_REFERENCE.md) for:

- **Endpoint specifications**
- **Parameter requirements**
- **Response formats**
- **Rate limiting details**

## Common Issues

1. **Rate limiting**: Respect the 12 requests/minute default limit
2. **Authentication**: Ensure `MOTION_API_KEY` is set correctly
3. **Validation**: Zod schemas must match Motion API requirements
4. **ESM imports**: Use `.js` extensions in import statements

## Build Process

- **TypeScript compilation** to `dist/` directory
- **Preserve file structure** from `src/`
- **Include type definitions** for better IDE support
- **Executable binary** at `dist/index.js`
description: Development workflow, testing, and debugging patterns
---
